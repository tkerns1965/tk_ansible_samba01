---
- name: Include private variables
  include_vars: private.yml

- name: Execute block as sudo
  become: yes
  block:
    - name: Install packages
      apt:
        name="{{ sambasvr_packages }}"
        state=latest

    - name: Unset kerberos default realm
      lineinfile:
        path: /etc/krb5.conf
        regexp: '^(\s*)(default_realm = ATHENA.MIT.EDU)$'
        line: '\1# \2'
        backrefs: yes

    - name: Set kerberos default realm
      blockinfile:
        path: /etc/krb5.conf
        insertafter: '^\s*# default_realm = ATHENA.MIT.EDU$'
        block: |
          #
                  default_realm = {{ krb5_default_realm }}
                  dns_lookup_kdc = true
                  dns_lookup_realm = true
          #

    - name: Set NTP server
      blockinfile:
        path: /etc/systemd/timesyncd.conf
        insertafter: '^#NTP=$'
        block: |
          #
          "NTP={{ timesyncd_ntpsvr }}"
          #
      register: ntpsvr_result
      ignore_errors: True

    - name: Enable NTP
      command: "{{ item }}"
      when: ntpsvr_result is changed
      with_items:
        - timedatectl set-ntp true
        - systemctl restart systemd-timesyncd.service
        - timedatectl --adjust-system-clock

    - name: Create realmd.conf
      template:
        src: realmd.conf
        dest: /etc/realmd.conf

    - name: Check PAM configuration
      command: awk '/mkhomedir/ { print $3 }' /etc/pam.d/common-session
      register: chkpam_result
      changed_when: False

    - name: Update PAM configuration
      command: pam-auth-update --enable mkhomedir
      when: chkpam_result.stdout != "pam_mkhomedir.so"

    # - name: Check for domain
    #   command: realm list --name-only
    #   register: chkdomain_result
    #   changed_when: False

    - command: echo -e ""
      register: echo1
      changed_when: False

    - debug:
        var: echo1

    - command: echo -e "cwh.local"
      register: echo2
      changed_when: False

    - debug:
        var: echo2

    - command: echo -e "cwh.local\ncwh.local"
      register: echo3
      changed_when: False

    - debug:
        var: echo3

    - command: echo -e "found in echo1"
      when: "cwh.local" in echo1

    - command: echo -e "found in echo2"
      when: "cwh.local" in echo2

    - command: echo -e "found in echo3"
      when: "cwh.local" in echo3
